#/bin/bash

result=0
COMPARISON=MD5_COMPARISON
refc_plane_md5=test
golden_plane_md5=test


: <<'END_COMMENT' #start of annotation

#SYS variables
$LINENO

#for statatement by integer
idx=0
loop_cnt=1
for((idx=0; idx<loop_cnt; idx++)) do
    echo "${LINENO}"
    echo "${BASH_SOURCE}"
done


#Debugging Message format
_ERR_HDR_FMT="%.23s %s[%s]: "
_ERR_MSG_FMT="${_ERR_HDR_FMT}%s\n"
function err_msg {
    printf "$_ERR_MSG_FMT" $(date +%F.%T.%N) ${BASH_SOURCE[1]##*/} ${BASH_LINENO[0]} "${@}"
}
err_msg "test"

#read line by commend
idx=0
ps -a | grep multi_instance_ | while read line
do
    echo $line
    pid=$(echo "$line" | cut -d' ' -f1)
    echo "PID : $pid"
    kill_cmd="kill -9 $pid"
    echo "[$idx] $kill_cmd"
    $kill_cmd || echo ignore_error
    sleep 10
    idx=$((idx+1))
done

#cut
echo "test_2566x144" | cut -f 1 -d'_' --> test
echo "test_2566x144" | cut -f 2 -d'_' --> 2566x144
attr=$(echo $line | cut -d'=' -f1)

#background exe / multi process
idx=0
cmd="./a.out"
for(( idx=0; idx<10; idx++ ))
do
    echo "$cmd"
    $cmd &
    sleep 3
done
echo "finished"

#random value
function get_random {
    start=$1
    end=$2
    size=$(($end - $start + 1))
    val2=$RANDOM
    val1=$(($val2 % size))
    val=$(($start + $val1%$size))
    echo "$val"
}
g_test=$(get_random 1 2)

#change file name and contents
#/bin/bash
idx=0
changed_file_name=""
ret=0
ls | while read line
do
    echo $line
    changed_file_name=""
    ret=0
    echo "$line" | grep concealment || ret=1
    echo "$ret"
    if [ $ret -eq 0 ]; then
        changed_file_name=${line/pic_level/slice_level}
        echo $changed_file_name
        sed -i 's/pic_level/slice_level/g' $line
        mv $line $changed_file_name
    fi
    idx=$((idx+1))
done

#grep
grep -rin 'sorry' frost.txt # And sorry I could not travel both
grep -rinl 'sorry' # frost.txt

#head (head는 파일의 앞부분부터 확인)
test_str=$(head -c 3 frost.txt) # 3 characters,  two
test_row=$(head -n 2 frost.txt) # two rows

#tail (파일의 뒷부분부터 확인)
tail forst.txt # 마지막 부터 10행 출력
tail -n 20 forst.txt # 마지막 부터 20행 출력
tail -c 200 forst.txt # 마지막 부터 200 byte 출력
tail -f /var/log/messages # 파일 변경내용 출력
tail -f -s 1 -pid=3219 /var/log/messages # 3219 process가 종료 될 때까지 1초 간격으로 파일 변경내용 출력

END_COMMENT

echo "Finished"
